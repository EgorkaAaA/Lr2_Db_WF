<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BakeryDataSet" targetNamespace="http://tempuri.org/BakeryDataSet.xsd" xmlns:mstns="http://tempuri.org/BakeryDataSet.xsd" xmlns="http://tempuri.org/BakeryDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BakeryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BakeryConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Lr2_Db_WF.Properties.Settings.GlobalReference.Default.BakeryConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BackerySetTableAdapter" GeneratorDataComponentClassName="BackerySetTableAdapter" Name="BackerySet" UserDataComponentName="BackerySetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BakeryConnectionString (Settings)" DbObjectName="Bakery.dbo.BackerySet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BackerySet] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BackerySet] ([adres]) VALUES (@adres);
SELECT Id, adres FROM BackerySet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@adres" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="adres" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, adres FROM dbo.BackerySet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BackerySet] SET [adres] = @adres WHERE (([Id] = @Original_Id));
SELECT Id, adres FROM BackerySet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@adres" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="adres" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Bakery.dbo.BackerySet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="adres" DataSetColumn="adres" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DeliveriesSetTableAdapter" GeneratorDataComponentClassName="DeliveriesSetTableAdapter" Name="DeliveriesSet" UserDataComponentName="DeliveriesSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BakeryConnectionString (Settings)" DbObjectName="Bakery.dbo.DeliveriesSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DeliveriesSet] WHERE (([Id] = @Original_Id) AND ([numberOfCakes] = @Original_numberOfCakes) AND ([Backery_Id] = @Original_Backery_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_numberOfCakes" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="numberOfCakes" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Backery_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Backery_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DeliveriesSet] ([adres], [numberOfCakes], [Backery_Id]) VALUES (@adres, @numberOfCakes, @Backery_Id);
SELECT Id, adres, numberOfCakes, Backery_Id FROM DeliveriesSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@adres" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="adres" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@numberOfCakes" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="numberOfCakes" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Backery_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Backery_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, adres, numberOfCakes, Backery_Id FROM dbo.DeliveriesSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DeliveriesSet] SET [adres] = @adres, [numberOfCakes] = @numberOfCakes, [Backery_Id] = @Backery_Id WHERE (([Id] = @Original_Id) AND ([numberOfCakes] = @Original_numberOfCakes) AND ([Backery_Id] = @Original_Backery_Id));
SELECT Id, adres, numberOfCakes, Backery_Id FROM DeliveriesSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@adres" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="adres" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@numberOfCakes" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="numberOfCakes" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Backery_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Backery_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_numberOfCakes" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="numberOfCakes" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Backery_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Backery_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Bakery.dbo.DeliveriesSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="adres" DataSetColumn="adres" />
              <Mapping SourceColumn="numberOfCakes" DataSetColumn="numberOfCakes" />
              <Mapping SourceColumn="Backery_Id" DataSetColumn="Backery_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ShiftsSetTableAdapter" GeneratorDataComponentClassName="ShiftsSetTableAdapter" Name="ShiftsSet" UserDataComponentName="ShiftsSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BakeryConnectionString (Settings)" DbObjectName="Bakery.dbo.ShiftsSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ShiftsSet] WHERE (([Id] = @Original_Id) AND ([Staff_Id] = @Original_Staff_Id) AND ([Backery_Id] = @Original_Backery_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Staff_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Staff_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Backery_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Backery_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ShiftsSet] ([Plan], [Staff_Id], [Backery_Id]) VALUES (@Plan, @Staff_Id, @Backery_Id);
SELECT Id, [Plan], Staff_Id, Backery_Id FROM ShiftsSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Plan" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Plan" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Staff_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Staff_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Backery_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Backery_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, [Plan], Staff_Id, Backery_Id FROM dbo.ShiftsSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ShiftsSet] SET [Plan] = @Plan, [Staff_Id] = @Staff_Id, [Backery_Id] = @Backery_Id WHERE (([Id] = @Original_Id) AND ([Staff_Id] = @Original_Staff_Id) AND ([Backery_Id] = @Original_Backery_Id));
SELECT Id, [Plan], Staff_Id, Backery_Id FROM ShiftsSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Plan" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Plan" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Staff_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Staff_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Backery_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Backery_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Staff_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Staff_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Backery_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Backery_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Bakery.dbo.ShiftsSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Plan" DataSetColumn="Plan" />
              <Mapping SourceColumn="Staff_Id" DataSetColumn="Staff_Id" />
              <Mapping SourceColumn="Backery_Id" DataSetColumn="Backery_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StaffSetTableAdapter" GeneratorDataComponentClassName="StaffSetTableAdapter" Name="StaffSet" UserDataComponentName="StaffSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BakeryConnectionString (Settings)" DbObjectName="Bakery.dbo.StaffSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[StaffSet] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StaffSet] ([Surname], [name], [patronymic]) VALUES (@Surname, @name, @patronymic);
SELECT Id, Surname, name, patronymic FROM StaffSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@patronymic" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="patronymic" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Surname, name, patronymic FROM dbo.StaffSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[StaffSet] SET [Surname] = @Surname, [name] = @name, [patronymic] = @patronymic WHERE (([Id] = @Original_Id));
SELECT Id, Surname, name, patronymic FROM StaffSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@patronymic" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="patronymic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Bakery.dbo.StaffSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Surname" DataSetColumn="Surname" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="patronymic" DataSetColumn="patronymic" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BakeryDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BakeryDataSet" msprop:Generator_UserDSName="BakeryDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BackerySet" msprop:Generator_TableClassName="BackerySetDataTable" msprop:Generator_TableVarName="tableBackerySet" msprop:Generator_TablePropName="BackerySet" msprop:Generator_RowDeletingName="BackerySetRowDeleting" msprop:Generator_RowChangingName="BackerySetRowChanging" msprop:Generator_RowEvHandlerName="BackerySetRowChangeEventHandler" msprop:Generator_RowDeletedName="BackerySetRowDeleted" msprop:Generator_UserTableName="BackerySet" msprop:Generator_RowChangedName="BackerySetRowChanged" msprop:Generator_RowEvArgName="BackerySetRowChangeEvent" msprop:Generator_RowClassName="BackerySetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="adres" msprop:Generator_ColumnVarNameInTable="columnadres" msprop:Generator_ColumnPropNameInRow="adres" msprop:Generator_ColumnPropNameInTable="adresColumn" msprop:Generator_UserColumnName="adres">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DeliveriesSet" msprop:Generator_TableClassName="DeliveriesSetDataTable" msprop:Generator_TableVarName="tableDeliveriesSet" msprop:Generator_TablePropName="DeliveriesSet" msprop:Generator_RowDeletingName="DeliveriesSetRowDeleting" msprop:Generator_RowChangingName="DeliveriesSetRowChanging" msprop:Generator_RowEvHandlerName="DeliveriesSetRowChangeEventHandler" msprop:Generator_RowDeletedName="DeliveriesSetRowDeleted" msprop:Generator_UserTableName="DeliveriesSet" msprop:Generator_RowChangedName="DeliveriesSetRowChanged" msprop:Generator_RowEvArgName="DeliveriesSetRowChangeEvent" msprop:Generator_RowClassName="DeliveriesSetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="adres" msprop:Generator_ColumnVarNameInTable="columnadres" msprop:Generator_ColumnPropNameInRow="adres" msprop:Generator_ColumnPropNameInTable="adresColumn" msprop:Generator_UserColumnName="adres">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="numberOfCakes" msprop:Generator_ColumnVarNameInTable="columnnumberOfCakes" msprop:Generator_ColumnPropNameInRow="numberOfCakes" msprop:Generator_ColumnPropNameInTable="numberOfCakesColumn" msprop:Generator_UserColumnName="numberOfCakes" type="xs:short" />
              <xs:element name="Backery_Id" msprop:Generator_ColumnVarNameInTable="columnBackery_Id" msprop:Generator_ColumnPropNameInRow="Backery_Id" msprop:Generator_ColumnPropNameInTable="Backery_IdColumn" msprop:Generator_UserColumnName="Backery_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ShiftsSet" msprop:Generator_TableClassName="ShiftsSetDataTable" msprop:Generator_TableVarName="tableShiftsSet" msprop:Generator_TablePropName="ShiftsSet" msprop:Generator_RowDeletingName="ShiftsSetRowDeleting" msprop:Generator_RowChangingName="ShiftsSetRowChanging" msprop:Generator_RowEvHandlerName="ShiftsSetRowChangeEventHandler" msprop:Generator_RowDeletedName="ShiftsSetRowDeleted" msprop:Generator_UserTableName="ShiftsSet" msprop:Generator_RowChangedName="ShiftsSetRowChanged" msprop:Generator_RowEvArgName="ShiftsSetRowChangeEvent" msprop:Generator_RowClassName="ShiftsSetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Plan" msprop:Generator_ColumnVarNameInTable="columnPlan" msprop:Generator_ColumnPropNameInRow="Plan" msprop:Generator_ColumnPropNameInTable="PlanColumn" msprop:Generator_UserColumnName="Plan">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Staff_Id" msprop:Generator_ColumnVarNameInTable="columnStaff_Id" msprop:Generator_ColumnPropNameInRow="Staff_Id" msprop:Generator_ColumnPropNameInTable="Staff_IdColumn" msprop:Generator_UserColumnName="Staff_Id" type="xs:int" />
              <xs:element name="Backery_Id" msprop:Generator_ColumnVarNameInTable="columnBackery_Id" msprop:Generator_ColumnPropNameInRow="Backery_Id" msprop:Generator_ColumnPropNameInTable="Backery_IdColumn" msprop:Generator_UserColumnName="Backery_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StaffSet" msprop:Generator_TableClassName="StaffSetDataTable" msprop:Generator_TableVarName="tableStaffSet" msprop:Generator_TablePropName="StaffSet" msprop:Generator_RowDeletingName="StaffSetRowDeleting" msprop:Generator_RowChangingName="StaffSetRowChanging" msprop:Generator_RowEvHandlerName="StaffSetRowChangeEventHandler" msprop:Generator_RowDeletedName="StaffSetRowDeleted" msprop:Generator_UserTableName="StaffSet" msprop:Generator_RowChangedName="StaffSetRowChanged" msprop:Generator_RowEvArgName="StaffSetRowChangeEvent" msprop:Generator_RowClassName="StaffSetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Surname" msprop:Generator_ColumnVarNameInTable="columnSurname" msprop:Generator_ColumnPropNameInRow="Surname" msprop:Generator_ColumnPropNameInTable="SurnameColumn" msprop:Generator_UserColumnName="Surname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="patronymic" msprop:Generator_ColumnVarNameInTable="columnpatronymic" msprop:Generator_ColumnPropNameInRow="patronymic" msprop:Generator_ColumnPropNameInTable="patronymicColumn" msprop:Generator_UserColumnName="patronymic">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BackerySet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="DeliveriesSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DeliveriesSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="ShiftsSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ShiftsSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="StaffSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StaffSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_BackeryDeliveries" msdata:parent="BackerySet" msdata:child="DeliveriesSet" msdata:parentkey="Id" msdata:childkey="Backery_Id" msprop:Generator_UserChildTable="DeliveriesSet" msprop:Generator_ChildPropName="GetDeliveriesSetRows" msprop:Generator_UserRelationName="FK_BackeryDeliveries" msprop:Generator_ParentPropName="BackerySetRow" msprop:Generator_RelationVarName="relationFK_BackeryDeliveries" msprop:Generator_UserParentTable="BackerySet" />
      <msdata:Relationship name="FK_BackeryShifts" msdata:parent="BackerySet" msdata:child="ShiftsSet" msdata:parentkey="Id" msdata:childkey="Backery_Id" msprop:Generator_UserChildTable="ShiftsSet" msprop:Generator_ChildPropName="GetShiftsSetRows" msprop:Generator_UserRelationName="FK_BackeryShifts" msprop:Generator_ParentPropName="BackerySetRow" msprop:Generator_RelationVarName="relationFK_BackeryShifts" msprop:Generator_UserParentTable="BackerySet" />
      <msdata:Relationship name="FK_StaffShifts" msdata:parent="StaffSet" msdata:child="ShiftsSet" msdata:parentkey="Id" msdata:childkey="Staff_Id" msprop:Generator_UserChildTable="ShiftsSet" msprop:Generator_ChildPropName="GetShiftsSetRows" msprop:Generator_UserRelationName="FK_StaffShifts" msprop:Generator_RelationVarName="relationFK_StaffShifts" msprop:Generator_UserParentTable="StaffSet" msprop:Generator_ParentPropName="StaffSetRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>